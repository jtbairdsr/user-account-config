#!/bin/bash

# ------------------------------------------------ Add Default Flags --------------------------------------------------
alias df='df -h'          # make `df` human redable by default
alias ftp='ftp -i'        # turn off interactive prompting by default
alias grep='grep --color' # Mark up the matching text with an expression in GREP_COLOR env variable.
alias ls='ls -GFA'        # make ls more useful (file type markers, everything but . and .. etc.)
alias ping="ping -c5"     # make ping stop after 5 requests
alias scp='scp -C'        # Compression enable. Passes the -C flag to ssh(1) to enable compression.
alias top='top -o cpu'    # sort top by %CPU

# --------------------------------------------------- short hand ------------------------------------------------------
alias dnow='sudo shutdown -h now; exit'                # shutdown the machine now
alias fgrep='grep -F'                                  # Interpret pattern as a set of fixed strings
alias gs="git status"                                  # create a simple git status alias
alias gm="git mergetool"                               # create a simple git mergetool alias
alias grc="git rebase --continue"                      # create a simple alias to continue a git rebase
alias gxa="gitx --all"                                 # create a simple alias to open gitx on all branches
alias h=history                                        # shorthand for history
alias vi=vim                                           # redirect vi to vim.
alias vim=nvim                                         # use macvim in the terminal
alias showenv='env | grep -i'                          # grep env variables for a specific value
alias pull-tasks='~/.config/bugwarrior/pull-script.sh' # pull tasks from github/gitlab
alias dm='docker-machine'                              # simplify the docker-machine command

# ----------------------------------------------------- VirtualBox -----------------------------------------------------
alias vblist='VBoxManage list runningvms' # show running vms

# ----------------------------------------------------- docker --------------------------------------------------------
alias dockimgsrm='docker rmi -f $(docker images -q)'                            # remove all images
alias dockcontrm='docker rm $(docker ps -aq)'                                   # remove all containers
alias dockexitrm='docker ps -a | grep Exit | cut -d " " -f 1 | xargs docker rm' # remove all stopped containers

# -------------------------------------------------------- Misc --------------------------------------------------------
#  shellcheck disable=SC2139,SC2154
alias Ping="\ping"                                                  # an alias to a ping that won't end
alias rzsh='echo relaunching zsh.......;exec zsh -ls'               # an alias for relaunching zsh
alias clr='colorize'                                                # a shortened version of the colorize alias
alias lncustom='ln -fhs $config/custom ~/.oh-my-zsh/custom && rzsh' # ln $config/custom into .oh-my-zsh
alias safari='~/bin/new_safari_window'                              # open urls in a new safari window
alias emptyTrash='rm -rf ~/.Trash/*'                                # empty the trash
alias zshconfig='$MAIN_EDITOR ~/.zshrc'                             # open .zshrc in atom
alias zshconfiglocal='$MAIN_EDITOR ~/.zprofile.local'               # open .zprofile.local in atom
alias edconfig='$MAIN_EDITOR $config'                               # open the $config directory in atom
alias edwork='$MAIN_EDITOR $work'                                   # open the current $work directory in atom
alias size='stat +size'
alias mux='tmuxinator'

alias fixLicenses="INJECT_LICENSES=1 git commit --allow-empty -m 'Add/update licenses for all maintained files' --edit"

# ----------------------------------------------------- functions ------------------------------------------------------
# install dependency and its types to a node project...
tsinstall () {
	npm i --save "$1" && npm i --save-dev "@types/$1"
}

# find process that is attached to a specific port
pidport () {
	lsof -n -i4TCP:"$1" | grep LISTEN
}

# shortcut to search processes for a keyword
showpid () {
	# shellcheck disable=SC2009
	ps "${SHOWPIDFLAGS:--auxl}" | head -1 >&2; ps "${SHOWPIDFLAGS:--auxl}" | grep -v grep | grep -i "$1"
}

# find a process that matches a search string and show the port to which it is bound
whatport () {
	lsof -i -P -n | grep LISTEN | grep "$1"
}

# run microservice build process
build () {
	CWD=$(pwd)
	service=$(jq -r ".name" package.json)
	cd /src/ewb-holdings/microservices || return 1
	npm run build "$service"
	trap 'cd "$CWD"' EXIT
}

# copy file contents to the global clipboard...
copy () {
	pbcopy < "$1"
}


swarm_bash () {
	docker exec -it "$1.1.$(docker service ps -f name="$1".1 "$1" -q | head -n 1)" bash -o vi
}

swarm_sh () {
	docker exec -it "$1.1.$(docker service ps -f name="$1".1 "$1" -q | head -n 1)" sh -o vi
}

microservice_image_id () {
	docker inspect "registry.gitlab.com/ewb-development/ewb-microservices/$1" | grep Id
}
